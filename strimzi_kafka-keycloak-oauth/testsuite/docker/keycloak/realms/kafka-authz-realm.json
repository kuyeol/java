{
  "realm": "kafka-authz",
  "accessTokenLifespan": 300,
  "ssoSessionIdleTimeout": 864000,
  "ssoSessionMaxLifespan": 864000,
  "enabled": true,
  "sslRequired": "external",
  "roles": {
    "realm": [
      {
        "name": "Dev Team A",
        "description": "Developer on Dev Team A"
      },
      {
        "name": "Dev Team B",
        "description": "Developer on Dev Team B"
      },
      {
        "name": "Ops Team",
        "description": "Operations team member"
      }
    ],
    "client": {
      "team-a-client": [],
      "team-b-client": [],
      "kafka-cli": [],
      "kafka": [
        {
          "name": "uma_protection",
          "clientRole": true
        },
        {
          "name": "kafka-user",
          "clientRole": true
        }
      ]
    }
  },
  "groups" : [
    {
      "name" : "ClusterManager Group",
      "path" : "/ClusterManager Group"
    }, {
      "name" : "ClusterManager-my-cluster Group",
      "path" : "/ClusterManager-my-cluster Group"
    }, {
      "name" : "Ops Team Group",
      "path" : "/Ops Team Group"
    }
  ],
  "users": [
    {
      "username" : "alice",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Alice",
      "email" : "alice@strimzi.io",
      "credentials" : [ {
        "type" : "password",
        "secretData" : "{\"value\":\"KqABIiReBuRWbP4pBct3W067pNvYzeN7ILBV+8vT8nuF5cgYs2fdl2QikJT/7bGTW/PBXg6CYLwJQFYrBK9MWg==\",\"salt\":\"EPgscX9CQz7UnuZDNZxtMw==\"}",
        "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "offline_access", "uma_authorization" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "groups" : [ "/ClusterManager Group" ]
    }, {
      "username" : "bob",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Bob",
      "email" : "bob@strimzi.io",
      "credentials" : [ {
        "type" : "password",
        "secretData" : "{\"value\":\"QhK0uLsKuBDrMm9Z9XHvq4EungecFRnktPgutfjKtgVv2OTPd8D390RXFvJ8KGvqIF8pdoNxHYQyvDNNwMORpg==\",\"salt\":\"yxkgwEyTnCGLn42Yr9GxBQ==\"}",
        "credentialData" : "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "offline_access", "uma_authorization" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "groups" : [ "/ClusterManager-my-cluster Group" ]
    }, {
      "username" : "zero",
      "enabled" : true,
      "totp" : false,
      "emailVerified" : true,
      "firstName" : "Zero",
      "email" : "zero@strimzi.io",
      "credentials" : [ {
        "type" : "password",
        "value" : "zero-password"
      } ],
      "disableableCredentialTypes" : [ ],
      "requiredActions" : [ ],
      "realmRoles" : [ "offline_access", "uma_authorization" ],
      "clientRoles" : {
        "account" : [ "view-profile", "manage-account" ]
      },
      "groups" : []
    },
    {
      "username" : "service-account-team-a-client",
      "enabled" : true,
      "serviceAccountClientId" : "team-a-client",
      "realmRoles" : [ "offline_access", "Dev Team A" ],
      "clientRoles" : {
        "account" : [ "manage-account", "view-profile" ]
      },
      "groups" : [ ]
    },
    {
      "username" : "service-account-team-b-client",
      "enabled" : true,
      "serviceAccountClientId" : "team-b-client",
      "realmRoles" : [ "offline_access", "Dev Team B" ],
      "clientRoles" : {
        "kafka" : [ "kafka-user" ],
        "account" : [ "manage-account", "view-profile" ]
      },
      "groups" : [ ]
    },
    {
      "username": "service-account-kafka-producer-client-1",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-1@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-1"
    },
    {
      "username": "service-account-kafka-producer-client-2",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-2@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-2"
    },
    {
      "username": "service-account-kafka-producer-client-3",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-3@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-3"
    },
    {
      "username": "service-account-kafka-producer-client-4",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-4@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-4"
    },
    {
      "username": "service-account-kafka-producer-client-5",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-5@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-5"
    },
    {
      "username": "service-account-kafka-producer-client-6",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-6@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-6"
    },
    {
      "username": "service-account-kafka-producer-client-7",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-7@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-7"
    },
    {
      "username": "service-account-kafka-producer-client-8",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-8@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-8"
    },
    {
      "username": "service-account-kafka-producer-client-9",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-9@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-9"
    },
    {
      "username": "service-account-kafka-producer-client-10",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-producer-client-10@placeholder.org",
      "serviceAccountClientId": "kafka-producer-client-10"
    },
    {
      "username": "service-account-kafka-consumer-client-1",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-1@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-1"
    },
    {
      "username": "service-account-kafka-consumer-client-2",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-2@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-2"
    },
    {
      "username": "service-account-kafka-consumer-client-3",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-3@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-3"
    },
    {
      "username": "service-account-kafka-consumer-client-4",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-4@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-4"
    },
    {
      "username": "service-account-kafka-consumer-client-5",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-5@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-5"
    },
    {
      "username": "service-account-kafka-consumer-client-6",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-6@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-6"
    },
    {
      "username": "service-account-kafka-consumer-client-7",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-7@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-7"
    },
    {
      "username": "service-account-kafka-consumer-client-8",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-8@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-8"
    },
    {
      "username": "service-account-kafka-consumer-client-9",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-9@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-9"
    },
    {
      "username": "service-account-kafka-consumer-client-10",
      "enabled": true,
      "realmRoles" : [ "offline_access" ],
      "email": "service-account-kafka-consumer-client-10@placeholder.org",
      "serviceAccountClientId": "kafka-consumer-client-10"
    }
  ],
  "clients": [
    {
      "clientId": "team-a-client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "team-a-client-secret",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "fullScopeAllowed": true
    },
    {
      "clientId": "team-b-client",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "team-b-client-secret",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "fullScopeAllowed": true
    },
    {
      "clientId": "kafka",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-secret",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "fullScopeAllowed": true,
      "protocolMappers": [
        {
          "name": "kafka audience",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "kafka",
            "id.token.claim": "false",
            "access.token.claim": "true"
          }
        }
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [
          {
            "name": "Topic:a_*",
            "type": "Topic",
            "ownerManagedAccess": false,
            "displayName": "Topics that start with a_",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Create"
              },
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              },
              {
                "name": "Alter"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Group:x_*",
            "type": "Group",
            "ownerManagedAccess": false,
            "displayName": "Consumer groups that start with x_",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Delete"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Topic:x_*",
            "type": "Topic",
            "ownerManagedAccess": false,
            "displayName": "Topics that start with x_",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Create"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Delete"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              },
              {
                "name": "Alter"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Group:a_*",
            "type": "Group",
            "ownerManagedAccess": false,
            "displayName": "Groups that start with a_",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:*",
            "type": "Group",
            "ownerManagedAccess": false,
            "displayName": "Any group",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:*",
            "type": "Topic",
            "ownerManagedAccess": false,
            "displayName": "Any topic",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Create"
              },
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              },
              {
                "name": "Alter"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "kafka-cluster:my-cluster,Topic:b_*",
            "type": "Topic",
            "ownerManagedAccess": false,
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Create"
              },
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              },
              {
                "name": "Alter"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "kafka-cluster:my-cluster,Group:b_*",
            "type": "Group",
            "ownerManagedAccess": false,
            "displayName": "Consumer groups on cluster my-cluster that start with b_",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Delete"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "kafka-cluster:my-cluster,Cluster:*",
            "type": "Cluster",
            "ownerManagedAccess": false,
            "displayName": "Cluster scope on my-cluster",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              },
              {
                "name": "ClusterAction"
              },
              {
                "name": "IdempotentWrite"
              }
            ]
          },
          {
            "name": "kafka-cluster:my-cluster,Group:*",
            "type": "Group",
            "ownerManagedAccess": false,
            "displayName": "Any group on my-cluster",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "kafka-cluster:my-cluster,Topic:*",
            "type": "Topic",
            "ownerManagedAccess": false,
            "displayName": "Any topic on my-cluster",
            "attributes": {},
            "uris": [],
            "scopes": [
              {
                "name": "Create"
              },
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "IdempotentWrite"
              },
              {
                "name": "Read"
              },
              {
                "name": "Alter"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name" : "Cluster:*",
            "type" : "Cluster",
            "ownerManagedAccess" : false,
            "attributes" : { },
            "uris" : [ ],
            "scopes": [
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              },
              {
                "name": "ClusterAction"
              },
              {
                "name": "IdempotentWrite"
              }
            ]
          },
          {
            "name": "Topic:messages-1",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-2",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-3",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-4",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-5",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-6",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-7",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-8",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-9",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Topic:messages-10",
            "type": "topic",
            "scopes": [
              {
                "name": "Delete"
              },
              {
                "name": "Describe"
              },
              {
                "name": "Create"
              },
              {
                "name": "Write"
              },
              {
                "name": "Alter"
              },
              {
                "name": "Read"
              },
              {
                "name": "DescribeConfigs"
              },
              {
                "name": "AlterConfigs"
              }
            ]
          },
          {
            "name": "Group:g1*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g2*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g3*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g4*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g5*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g6*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g7*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g8*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g9*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          },
          {
            "name": "Group:g0*",
            "type": "group",
            "scopes": [
              {
                "name": "Describe"
              },
              {
                "name": "Write"
              },
              {
                "name": "Read"
              }
            ]
          }
        ],
        "policies": [
          {
            "name": "Dev Team A",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"Dev Team A\",\"required\":true}]"
            }
          },
          {
            "name": "Dev Team B",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"Dev Team B\",\"required\":true}]"
            }
          },
          {
            "name": "Ops Team",
            "type": "role",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "roles": "[{\"id\":\"Ops Team\",\"required\":true}]"
            }
          },
          {
            "name" : "ClusterManager Group",
            "type" : "group",
            "logic" : "POSITIVE",
            "decisionStrategy" : "UNANIMOUS",
            "config" : {
              "groups" : "[{\"path\":\"/ClusterManager Group\",\"extendChildren\":false}]"
            }
          }, {
            "name" : "ClusterManager of my-cluster Group",
            "type" : "group",
            "logic" : "POSITIVE",
            "decisionStrategy" : "UNANIMOUS",
            "config" : {
              "groups" : "[{\"path\":\"/ClusterManager-my-cluster Group\",\"extendChildren\":false}]"
            }
          },
          {
            "name": "Dev Team A owns topics that start with a_ on any cluster",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:a_*\"]",
              "applyPolicies": "[\"Dev Team A\"]"
            }
          },
          {
            "name": "Dev Team A can write to topics that start with x_ on any cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:x_*\"]",
              "scopes": "[\"Describe\",\"Write\"]",
              "applyPolicies": "[\"Dev Team A\"]"
            }
          },
          {
            "name": "Dev Team A can do IdempotentWrites on cluster my-cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-cluster:my-cluster,Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Dev Team A\"]"
            }
          },
          {
            "name": "Dev Team B owns topics that start with b_ on cluster my-cluster",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-cluster:my-cluster,Topic:b_*\"]",
              "applyPolicies": "[\"Dev Team B\"]"
            }
          },
          {
            "name": "Dev Team B can do IdempotentWrites on cluster my-cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-cluster:my-cluster,Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Dev Team B\"]"
            }
          },
          {
            "name": "Dev Team B owns groups that start with b_ on cluster my-cluster",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-cluster:my-cluster,Group:b_*\"]",
              "applyPolicies": "[\"Dev Team B\"]"
            }
          },
          {
            "name": "Dev Team B can read from topics that start with x_ on any cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:x_*\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Dev Team B\"]"
            }
          },
          {
            "name": "Dev Team B can update consumer group offsets that start with x_ on any cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:x_*\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Dev Team B\"]"
            }
          },
          {
            "name": "Dev Team A can use consumer groups that start with a_ on any cluster",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:a_*\"]",
              "applyPolicies": "[\"Dev Team A\"]"
            }
          },
          {
            "name": "ClusterManager of my-cluster Group has full access to topics on my-cluster",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-cluster:my-cluster,Topic:*\"]",
              "applyPolicies": "[\"ClusterManager of my-cluster Group\"]"
            }
          },
          {
            "name": "ClusterManager of my-cluster Group has full access to consumer groups on my-cluster",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-cluster:my-cluster,Group:*\"]",
              "applyPolicies": "[\"ClusterManager of my-cluster Group\"]"
            }
          },
          {
            "name": "ClusterManager of my-cluster Group has full access to cluster config on my-cluster",
            "type": "resource",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"kafka-cluster:my-cluster,Cluster:*\"]",
              "applyPolicies": "[\"ClusterManager of my-cluster Group\"]"
            }
          }, {
            "name" : "ClusterManager Group has full access to manage and affect groups",
            "type" : "resource",
            "logic" : "POSITIVE",
            "decisionStrategy" : "UNANIMOUS",
            "config" : {
              "resources" : "[\"Group:*\"]",
              "applyPolicies" : "[\"ClusterManager Group\"]"
            }
          }, {
            "name" : "ClusterManager Group has full access to manage and affect topics",
            "type" : "resource",
            "logic" : "POSITIVE",
            "decisionStrategy" : "UNANIMOUS",
            "config" : {
              "resources" : "[\"Topic:*\"]",
              "applyPolicies" : "[\"ClusterManager Group\"]"
            }
          }, {
            "name" : "ClusterManager Group has full access to cluster config",
            "type" : "resource",
            "logic" : "POSITIVE",
            "decisionStrategy" : "UNANIMOUS",
            "config" : {
              "resources" : "[\"Cluster:*\"]",
              "applyPolicies" : "[\"ClusterManager Group\"]"
            }
          },
          {
            "name": "Producer Client 1",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-1\"]"
            }
          },
          {
            "name": "Consumer Client 1",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-1\"]"
            }
          },
          {
            "name": "Producer Client 2",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-2\"]"
            }
          },
          {
            "name": "Consumer Client 2",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-2\"]"
            }
          },
          {
            "name": "Producer Client 3",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-3\"]"
            }
          },
          {
            "name": "Consumer Client 3",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-3\"]"
            }
          },
          {
            "name": "Producer Client 4",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-4\"]"
            }
          },
          {
            "name": "Consumer Client 4",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-4\"]"
            }
          },
          {
            "name": "Producer Client 5",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-5\"]"
            }
          },
          {
            "name": "Consumer Client 5",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-5\"]"
            }
          },
          {
            "name": "Producer Client 6",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-6\"]"
            }
          },
          {
            "name": "Consumer Client 6",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-6\"]"
            }
          },
          {
            "name": "Producer Client 7",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-7\"]"
            }
          },
          {
            "name": "Consumer Client 7",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-7\"]"
            }
          },
          {
            "name": "Producer Client 8",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-8\"]"
            }
          },
          {
            "name": "Consumer Client 8",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-8\"]"
            }
          },
          {
            "name": "Producer Client 9",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-9\"]"
            }
          },
          {
            "name": "Consumer Client 9",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-9\"]"
            }
          },
          {
            "name": "Producer Client 10",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-producer-client-10\"]"
            }
          },
          {
            "name": "Consumer Client 10",
            "type": "client",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "clients": "[\"kafka-consumer-client-10\"]"
            }
          },
          {
            "name": "Producer Client 1 can write to topic 'messages-1'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-1\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 1\"]"
            }
          },
          {
            "name": "Producer Client 1 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 1\"]"
            }
          },
          {
            "name": "Consumer Client 1 can read from topic 'messages-1'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-1\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 1\"]"
            }
          },
          {
            "name": "Consumer Client 1 can use any group that starts with 'g1'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g1*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 1\"]"
            }
          },
          {
            "name": "Producer Client 2 can write to topic 'messages-2'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-2\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 2\"]"
            }
          },
          {
            "name": "Producer Client 2 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 2\"]"
            }
          },
          {
            "name": "Consumer Client 2 can read from topic 'messages-2'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-2\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 2\"]"
            }
          },
          {
            "name": "Consumer Client 2 can use any group that starts with 'g2'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g2*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 2\"]"
            }
          },
          {
            "name": "Producer Client 3 can write to topic 'messages-3'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-3\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 3\"]"
            }
          },
          {
            "name": "Producer Client 3 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 3\"]"
            }
          },
          {
            "name": "Consumer Client 3 can read from topic 'messages-3'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-3\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 3\"]"
            }
          },
          {
            "name": "Consumer Client 3 can use any group that starts with 'g3'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g3*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 3\"]"
            }
          },
          {
            "name": "Producer Client 4 can write to topic 'messages-4'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-4\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 4\"]"
            }
          },
          {
            "name": "Producer Client 4 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 4\"]"
            }
          },
          {
            "name": "Consumer Client 4 can read from topic 'messages-4'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-4\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 4\"]"
            }
          },
          {
            "name": "Consumer Client 4 can use any group that starts with 'g4'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g4*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 4\"]"
            }
          },
          {
            "name": "Producer Client 5 can write to topic 'messages-5'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-5\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 5\"]"
            }
          },
          {
            "name": "Producer Client 5 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 5\"]"
            }
          },
          {
            "name": "Consumer Client 5 can read from topic 'messages-5'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-5\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 5\"]"
            }
          },
          {
            "name": "Consumer Client 5 can use any group that starts with 'g5'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g5*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 5\"]"
            }
          },
          {
            "name": "Producer Client 6 can write to topic 'messages-6'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-6\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 6\"]"
            }
          },
          {
            "name": "Producer Client 6 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 6\"]"
            }
          },
          {
            "name": "Consumer Client 6 can read from topic 'messages-6'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-6\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 6\"]"
            }
          },
          {
            "name": "Consumer Client 6 can use any group that starts with 'g6'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g6*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 6\"]"
            }
          },
          {
            "name": "Producer Client 7 can write to topic 'messages-7'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-7\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 7\"]"
            }
          },
          {
            "name": "Producer Client 7 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 7\"]"
            }
          },
          {
            "name": "Consumer Client 7 can read from topic 'messages-7'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-7\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 7\"]"
            }
          },
          {
            "name": "Consumer Client 7 can use any group that starts with 'g7'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g7*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 7\"]"
            }
          },
          {
            "name": "Producer Client 8 can write to topic 'messages-8'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-8\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 8\"]"
            }
          },
          {
            "name": "Producer Client 8 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 8\"]"
            }
          },
          {
            "name": "Consumer Client 8 can read from topic 'messages-8'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-8\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 8\"]"
            }
          },
          {
            "name": "Consumer Client 8 can use any group that starts with 'g8'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g8*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 8\"]"
            }
          },
          {
            "name": "Producer Client 9 can write to topic 'messages-9'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-9\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 9\"]"
            }
          },
          {
            "name": "Producer Client 9 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 9\"]"
            }
          },
          {
            "name": "Consumer Client 9 can read from topic 'messages-9'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-9\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 9\"]"
            }
          },
          {
            "name": "Consumer Client 9 can use any group that starts with 'g9'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g9*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 9\"]"
            }
          },
          {
            "name": "Producer Client 10 can write to topic 'messages-10'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-10\"]",
              "scopes": "[\"Delete\",\"Describe\",\"Create\",\"Write\"]",
              "applyPolicies": "[\"Producer Client 10\"]"
            }
          },
          {
            "name": "Producer Client 10 has IdempotentWrite permission on cluster",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Cluster:*\"]",
              "scopes": "[\"IdempotentWrite\"]",
              "applyPolicies": "[\"Producer Client 10\"]"
            }
          },
          {
            "name": "Consumer Client 10 can read from topic 'messages-10'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Topic:messages-10\"]",
              "scopes": "[\"Describe\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 10\"]"
            }
          },
          {
            "name": "Consumer Client 10 can use any group that starts with 'g0'",
            "type": "scope",
            "logic": "POSITIVE",
            "decisionStrategy": "UNANIMOUS",
            "config": {
              "resources": "[\"Group:g0*\"]",
              "scopes": "[\"Describe\",\"Write\",\"Read\"]",
              "applyPolicies": "[\"Consumer Client 10\"]"
            }
          }
        ],
        "scopes": [
          {
            "name": "Create"
          },
          {
            "name": "Read"
          },
          {
            "name": "Write"
          },
          {
            "name": "Delete"
          },
          {
            "name": "Alter"
          },
          {
            "name": "Describe"
          },
          {
            "name": "ClusterAction"
          },
          {
            "name": "DescribeConfigs"
          },
          {
            "name": "AlterConfigs"
          },
          {
            "name": "IdempotentWrite"
          }
        ],
        "decisionStrategy": "AFFIRMATIVE"
      }
    },
    {
      "clientId": "kafka-cli",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-cli-secret",
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "fullScopeAllowed": true
    },
    {
      "clientId": "kafka-producer-client-1",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-1-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-2",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-2-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-3",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-3-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-4",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-4-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-5",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-5-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-6",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-6-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-7",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-7-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-8",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-8-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-9",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-9-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-producer-client-10",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-producer-client-10-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-1",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-1-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-2",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-2-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-3",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-3-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-4",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-4-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-5",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-5-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-6",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-6-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-7",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-7-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-8",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-8-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-9",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-9-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired" : false,
      "fullScopeAllowed" : false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    },
    {
      "clientId": "kafka-consumer-client-10",
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "kafka-consumer-client-10-secret",
      "publicClient": false,
      "bearerOnly": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "consentRequired": false,
      "fullScopeAllowed": false,
      "attributes": {
        "access.token.lifespan": "36000"
      }
    }
  ]
}