version: '3'

services:
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.5
    ports:
      - "8080:8080"
    volumes:
      - ${PWD}/../docker/keycloak/realms:/opt/keycloak/data/import
      - ${PWD}/../docker/certificates/keycloak.server.keystore.p12:/opt/keycloak/data/certs/keycloak.server.keystore.p12

    command: "-v start --import-realm --features=token-exchange,authorization,scripts"

    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME=keycloak
      - KC_HTTP_ENABLED=true

  kafka:
    image: ${KAFKA_DOCKER_IMAGE}
    ports:
      - "9201:9201"
      - "9202:9202"
      - "9203:9203"
      - "9204:9204"
      - "9205:9205"
      - "9206:9206"
      - "9207:9207"
      - "9208:9208"
      - "5006:5006"
    volumes:
      - ${PWD}/../docker/target/kafka/libs:/opt/kafka/libs/strimzi
      - ${PWD}/../docker/kafka/config:/opt/kafka/config/strimzi
      - ${PWD}/../docker/kafka/scripts:/opt/kafka/strimzi
    command:
      - /bin/bash
      - -c
      - cd /opt/kafka/strimzi && ./start.sh
    environment:

      #- KAFKA_DEBUG=y
      #- DEBUG_SUSPEND_FLAG=y
      #- JAVA_DEBUG_PORT=0.0.0.0:5006

      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=JWT://kafka:9201,INTROSPECT://kafka:9202,JWTPLAIN://kafka:9203,INTROSPECTPLAIN://kafka:9204,EXPIRETEST://kafka:9205,JWTCANTCONNECT://kafka:9206,INTROSPECTCANTCONNECT://kafka:9207,INTROSPECTTIMEOUT://kafka:9208
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=JWT:SASL_PLAINTEXT,INTROSPECT:SASL_PLAINTEXT,JWTPLAIN:SASL_PLAINTEXT,INTROSPECTPLAIN:SASL_PLAINTEXT,EXPIRETEST:SASL_PLAINTEXT,JWTCANTCONNECT:SASL_PLAINTEXT,INTROSPECTCANTCONNECT:SASL_PLAINTEXT,INTROSPECTTIMEOUT:SASL_PLAINTEXT
      - KAFKA_SASL_ENABLED_MECHANISMS=OAUTHBEARER
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTROSPECT
      - KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL=OAUTHBEARER

      # Common settings for all the listeners
      # username extraction from JWT token claim
      - OAUTH_USERNAME_CLAIM=preferred_username
      - KAFKA_PRINCIPAL_BUILDER_CLASS=io.strimzi.kafka.oauth.server.OAuthKafkaPrincipalBuilder
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

      # Configuration of individual listeners
      - KAFKA_LISTENER_NAME_INTROSPECT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.introspection.endpoint.uri=\"http://keycloak:8080/realms/demo/protocol/openid-connect/token/introspect\"    oauth.client.id=\"kafka-broker\"    oauth.client.secret=\"kafka-broker-secret\"    oauth.valid.issuer.uri=\"https://keycloak:8443/realms/demo\"    oauth.token.endpoint.uri=\"http://keycloak:8080/realms/demo/protocol/openid-connect/token\"    oauth.fallback.username.claim=\"username\" ;
      - KAFKA_LISTENER_NAME_INTROSPECT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler
      - KAFKA_LISTENER_NAME_INTROSPECT_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

      - KAFKA_LISTENER_NAME_JWT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.jwks.endpoint.uri=\"http://keycloak:8080/realms/demo-ec/protocol/openid-connect/certs\"    oauth.valid.issuer.uri=\"https://keycloak:8443/realms/demo-ec\"    unsecuredLoginStringClaim_sub=\"admin\"    oauth.fallback.username.claim=\"client_id\"    oauth.fallback.username.prefix=\"service-account-\" ;
      - KAFKA_LISTENER_NAME_JWT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_JWTPLAIN_SASL_ENABLED_MECHANISMS=OAUTHBEARER,PLAIN
      - KAFKA_LISTENER_NAME_JWTPLAIN_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.jwks.endpoint.uri=\"http://keycloak:8080/realms/kafka-authz/protocol/openid-connect/certs\"    oauth.valid.issuer.uri=\"https://keycloak:8443/realms/kafka-authz\"    oauth.fallback.username.claim=\"client_id\"    oauth.fallback.username.prefix=\"service-account-\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_JWTPLAIN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_JWTPLAIN_PLAIN_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required    oauth.token.endpoint.uri=\"http://keycloak:8080/realms/kafka-authz/protocol/openid-connect/token\"    oauth.jwks.endpoint.uri=\"http://keycloak:8080/realms/kafka-authz/protocol/openid-connect/certs\"    oauth.valid.issuer.uri=\"https://keycloak:8443/realms/kafka-authz\"    oauth.fallback.username.claim=\"client_id\"    oauth.fallback.username.prefix=\"service-account-\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_JWTPLAIN_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.plain.JaasServerOauthOverPlainValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_INTROSPECTPLAIN_SASL_ENABLED_MECHANISMS=OAUTHBEARER,PLAIN
      - KAFKA_LISTENER_NAME_INTROSPECTPLAIN_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.introspection.endpoint.uri=\"http://keycloak:8080/realms/kafka-authz/protocol/openid-connect/token/introspect\"    oauth.valid.issuer.uri=\"https://keycloak:8443/realms/kafka-authz\"    oauth.client.id=\"kafka\"    oauth.client.secret=\"kafka-secret\"    oauth.fallback.username.claim=\"client_id\"    oauth.fallback.username.prefix=\"service-account-\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_INTROSPECTPLAIN_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_INTROSPECTPLAIN_PLAIN_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required    oauth.token.endpoint.uri=\"http://keycloak:8080/realms/kafka-authz/protocol/openid-connect/token\"    oauth.introspection.endpoint.uri=\"http://keycloak:8080/realms/kafka-authz/protocol/openid-connect/token/introspect\"    oauth.valid.issuer.uri=\"https://keycloak:8443/realms/kafka-authz\"    oauth.client.id=\"kafka\"    oauth.client.secret=\"kafka-secret\"    oauth.fallback.username.claim=\"client_id\"    oauth.fallback.username.prefix=\"service-account-\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_INTROSPECTPLAIN_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.plain.JaasServerOauthOverPlainValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_EXPIRETEST_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.jwks.endpoint.uri=\"http://keycloak:8080/realms/expiretest/protocol/openid-connect/certs\"    oauth.valid.issuer.uri=\"https://keycloak:8443/realms/expiretest\"    oauth.fallback.username.claim=\"client_id\"    oauth.fallback.username.prefix=\"service-account-\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_EXPIRETEST_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_JWTCANTCONNECT_SASL_ENABLED_MECHANISMS=PLAIN
      - KAFKA_LISTENER_NAME_JWTCANTCONNECT_PLAIN_SASL_JAAS_CONFIG=org.apache.kafka.common.security.plain.PlainLoginModule required    oauth.token.endpoint.uri=\"http://keycloak:8081/realms/kafka-authz/protocol/openid-connect/token\"    oauth.jwks.endpoint.uri=\"http://keycloak:8080/realms/kafka-authz/protocol/openid-connect/certs\"    oauth.valid.issuer.uri=\"https://whatever\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_JWTCANTCONNECT_PLAIN_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.plain.JaasServerOauthOverPlainValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_INTROSPECTCANTCONNECT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.introspection.endpoint.uri=\"http://keycloak:8081/realms/demo/protocol/openid-connect/token/introspect\"    oauth.client.id=\"kafka-broker\"    oauth.client.secret=\"kafka-broker-secret\"    oauth.valid.issuer.uri=\"https://whatever\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_INTROSPECTCANTCONNECT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_INTROSPECTTIMEOUT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.connect.timeout.seconds=\"5\"    oauth.introspection.endpoint.uri=\"http://172.0.0.221:8081/realms/demo/protocol/openid-connect/token/introspect\"    oauth.client.id=\"kafka-broker\"    oauth.client.secret=\"kafka-broker-secret\"    oauth.valid.issuer.uri=\"https://whatever\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_INTROSPECTTIMEOUT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      # For start.sh script to know where the keycloak is listening
      - KEYCLOAK_HOST=${KEYCLOAK_HOST:-keycloak}
      - REALM=${REALM:-flood}

  zookeeper:
    image: ${KAFKA_DOCKER_IMAGE}
    ports:
      - "2181:2181"
    volumes:
      - ${PWD}/../docker/zookeeper/scripts:/opt/kafka/strimzi
    command:
      - /bin/bash
      - -c
      - cd /opt/kafka/strimzi && ./start.sh
    environment:
      - LOG_DIR=/tmp/logs
