version: '3'

services:

  hydra:
    image: oryd/hydra:v1.8.5
    ports:
      - "4444:4444"
      - "4445:4445"
    volumes:
      - ${PWD}/../docker/target/hydra/certs:/tmp/certs
    command: serve all

    environment:
      - DSN=memory
      - URLS_SELF_ISSUER=https://hydra:4444/
      - URLS_CONSENT=http://hydra:9020/consent
      - URLS_LOGIN=http://hydra:9020/login
      - SERVE_TLS_KEY_PATH=/tmp/certs/hydra.key
      - SERVE_TLS_CERT_PATH=/tmp/certs/hydra.crt
      - SERVE_PUBLIC_PORT=4444
      - SERVE_ADMIN_PORT=4445

  hydra-import:
    image: testsuite/hydra-import:latest
    volumes:
      - ${PWD}/../docker/hydra-import/scripts:/hydra
      - ${PWD}/../docker/target/hydra-import/certs:/hydra/certs
    entrypoint: ""
    command:
      - /bin/bash
      - -c
      - cd hydra && ./start.sh
    environment:
      - HYDRA_ADMIN_URL=https://hydra:4445
      - HYDRA_URI=https://hydra:4445/clients
      - SERVE_ADMIN_PORT=4445

  hydra-jwt:
    image: oryd/hydra:v1.8.5
    ports:
      - "4454:4454"
      - "4455:4455"
    volumes:
      - ${PWD}/../docker/target/hydra/certs:/tmp/certs
    command: serve all

    environment:
      - DSN=memory
      - URLS_SELF_ISSUER=https://hydra-jwt:4454/
      - URLS_CONSENT=http://hydra-jwt:9120/consent
      - URLS_LOGIN=http://hydra-jwt:9120/login
      - SERVE_TLS_KEY_PATH=/tmp/certs/hydra-jwt.key
      - SERVE_TLS_CERT_PATH=/tmp/certs/hydra-jwt.crt
      - SERVE_PUBLIC_PORT=4454
      - SERVE_ADMIN_PORT=4455
      - STRATEGIES_ACCESS_TOKEN=jwt

  hydra-jwt-import:
    image: testsuite/hydra-import:latest
    volumes:
      - ${PWD}/../docker/hydra-import/scripts:/hydra
      - ${PWD}/../docker/target/hydra-import/certs:/hydra/certs
    entrypoint: ""
    command:
      - /bin/bash
      - -c
      - cd hydra && ./start.sh
    environment:
      - HYDRA_ADMIN_URL=https://hydra-jwt:4455
      - HYDRA_URI=https://hydra-jwt:4455/clients
      - SERVE_ADMIN_PORT=4455

  kafka:
    image: ${KAFKA_DOCKER_IMAGE}
    ports:
      - "9092:9092"
      - "9093:9093"
    links:
      - hydra
      - hydra-jwt
      - hydra-import
      - hydra-jwt-import
    volumes:
      - ${PWD}/../docker/target/kafka/libs:/opt/kafka/libs/strimzi
      - ${PWD}/../docker/kafka/config:/opt/kafka/config/strimzi
      - ${PWD}/../docker/target/kafka/certs:/opt/kafka/config/strimzi/certs
      - ${PWD}/../docker/kafka/scripts:/opt/kafka/strimzi
    command:
      - /bin/bash
      - -c
      - cd /opt/kafka/strimzi && ./start_with_hydra.sh

    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=INTROSPECT://kafka:9092,JWT://kafka:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTROSPECT:SASL_PLAINTEXT,JWT:SASL_PLAINTEXT
      - KAFKA_SASL_ENABLED_MECHANISMS=OAUTHBEARER
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTROSPECT
      - KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL=OAUTHBEARER

      - KAFKA_LISTENER_NAME_INTROSPECT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.introspection.endpoint.uri=\"https://hydra:4445/oauth2/introspect\"    oauth.client.id=\"kafka-broker\"    oauth.client.secret=\"kafka-broker-secret\"    oauth.valid.issuer.uri=\"https://hydra:4444/\"    oauth.token.endpoint.uri=\"https://hydra:4444/oauth2/token\"    oauth.check.access.token.type=\"false\"    oauth.access.token.is.jwt=\"false\" ;
      - KAFKA_LISTENER_NAME_INTROSPECT_OAUTHBEARER_SASL_LOGIN_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
      - KAFKA_LISTENER_NAME_INTROSPECT_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      - KAFKA_LISTENER_NAME_JWT_OAUTHBEARER_SASL_JAAS_CONFIG=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required    oauth.jwks.endpoint.uri=\"https://hydra-jwt:4454/.well-known/jwks.json\"    oauth.valid.issuer.uri=\"https://hydra-jwt:4454/\"    oauth.check.access.token.type=\"false\"    unsecuredLoginStringClaim_sub=\"admin\" ;
      - KAFKA_LISTENER_NAME_JWt_OAUTHBEARER_SASL_SERVER_CALLBACK_HANDLER_CLASS=io.strimzi.kafka.oauth.server.JaasServerOauthValidatorCallbackHandler

      # Truststore config for connecting to secured authorization server
      - OAUTH_SSL_TRUSTSTORE_LOCATION=/opt/kafka/config/strimzi/certs/ca-truststore.p12
      - OAUTH_SSL_TRUSTSTORE_PASSWORD=changeit
      - OAUTH_SSL_TRUSTSTORE_TYPE=pkcs12

      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1

      # For start_with_hydra.sh script to know where hydra is listening
      - HYDRA_HOST=${HYDRA_HOST:-hydra}

  zookeeper:
    image: ${KAFKA_DOCKER_IMAGE}
    ports:
      - "2181:2181"
    volumes:
      - ${PWD}/../docker/zookeeper/scripts:/opt/kafka/strimzi
    command:
      - /bin/bash
      - -c
      - cd /opt/kafka/strimzi && ./start.sh
    environment:
      - LOG_DIR=/tmp/logs
