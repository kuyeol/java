docker-compose -f arm64-connect-docker-compose.yml up --build
docker-compose -f arm64-connect-docker-compose.yml down -v

docker exec -it broker /bin/bash

kafka-console-consumer --topic postgres_orientation_students --bootstrap-server localhost:9092 --from-beginning --property print.key=true



    curl -i -X PUT http://localhost:8083/connectors/jdbc_source_connector_example/config \
         -H "Content-Type: application/json" \
         -d '{
                "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
                "connection.url": "jdbc:postgresql://postgres:5432/postgres",
                "connection.user": "postgres",
                "connection.password": "postgres",
                "mode":"timestamp",
                "timestamp.column.name":"ts",
                "topic.prefix":"postgres_",
                "tasks.max":"1",
                "value.converter":"org.apache.kafka.connect.json.JsonConverter",
                "value.converter.schemas.enable": "false"
            }'

curl -i -X PUT http://localhost:8083/connectors/jdbc_source_connector_example/config \
      -H "Content-Type: application/json" \
      -d '{
             "connector.class": "io.confluent.connect.jdbc.JdbcSourceConnector",
             "connection.url": "jdbc:postgresql://postgres:5432/postgres",
             "connection.user": "postgres",
             "connection.password": "postgres",
             "mode":"timestamp",
             "timestamp.column.name":"ts",
             "topic.prefix":"postgres_",
             "tasks.max":"1",
             "value.converter":"org.apache.kafka.connect.json.JsonConverter",
             "value.converter.schemas.enable": "false",
             "transforms":"copyFieldToKey, extractKeyFromStruct, maskSsn",
             "transforms.copyFieldToKey.type":"org.apache.kafka.connect.transforms.ValueToKey",
             "transforms.copyFieldToKey.fields":"user_name",
             "transforms.extractKeyFromStruct.type":"org.apache.kafka.connect.transforms.ExtractField$Key",
             "transforms.extractKeyFromStruct.field":"user_name",
             "transforms.maskSsn.type":"org.apache.kafka.connect.transforms.MaskField$Value",
             "transforms.maskSsn.fields":"ssn",
             "transforms.maskSsn.replacement":"xxx-xx-xxxx"
         }'



echo 'SELECT * FROM orientation_students;' | docker exec -i postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB'
echo "UPDATE orientation_students set full_name='Dr Stephen Strange' where user_name='timemaster'" | docker exec -i postgres bash -c 'psql -U $POSTGRES_USER $POSTGRES_DB'


curl -s http://localhost:8083/connectors/jdbc_source_connector_example/status

curl -i -X PUT localhost:8083/connectors/student-info-elasticsearch-connector/config \
    -H "Content-Type: application/json" \
	-d '{
	        "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",
			"connection.url": "http://elasticsearch:9200",
			"connection.username":"elastic",
			"connection.password":"elastic",
			"tasks.max": "1",
			"topics": "postgres_orientation_students",
			"type.name": "_doc",
			"value.converter": "org.apache.kafka.connect.json.JsonConverter",
			"value.converter.schemas.enable": "false",
			"schema.ignore": "true",
			"key.ignore": "false",
		    "errors.tolerance":"all",
		    "errors.deadletterqueue.topic.name":"orientation_student_dlq",
		    "errors.deadletterqueue.context.headers.enable": "true",
		    "errors.deadletterqueue.topic.replication.factor": "1"
	    }'

#With Schema
curl -i -X PUT localhost:8083/connectors/stock-feed-connector/config \
    -H "Content-Type: application/json" \
	-d '{
	        "connector.class": "bbejeck.chapter_5.connector.StockTickerSourceConnector",
			"api.url": "https://query1.finance.yahoo.com/v7/finance/quote",
			"tasks.max": "1",
			"topic": "yahoo_feed_results",
            "batch.size": "100",
            "symbols": "CFLT,AAPL,GOOG",
            "api.poll.interval": "5000",
            "token": "token-placeholder",
            "result.node.path": "/quoteResponse/result",
            "symbol.update.path": "/usr/share/java/bbejeck-chapter_5-connector/configs/ticker-symbols.txt",
			"value.converter": "org.apache.kafka.connect.json.JsonConverter",
			"value.converter.schemas.enable": "true",
			"transforms":"extractFields",
            "transforms.extractFields.type":"bbejeck.chapter_5.transformer.MultiFieldExtract$Value",
            "transforms.extractFields.extract.fields":"bid,ask,displayName,symbol",
			"schema.ignore": "false",
			"key.ignore": "true"
	    }'
#Without Schema
curl -i -X PUT localhost:8083/connectors/stock-feed-connector/config \
    -H "Content-Type: application/json" \
	-d '{
	        "connector.class": "bbejeck.chapter_5.connector.StockTickerSourceConnector",
			"api.url": "https://query1.finance.yahoo.com/v7/finance/quote",
			"tasks.max": "1",
			"topic": "yahoo_feed_results",
            "batch.size": "100",
            "symbols": "CFLT,AAPL,GOOG",
            "api.poll.interval": "5000",
            "token": "token-placeholder",
            "result.node.path": "/quoteResponse/result",
            "symbol.update.path": "/usr/share/java/bbejeck-chapter_5-connector/configs/ticker-symbols.txt",
			"value.converter": "org.apache.kafka.connect.json.JsonConverter",
			"value.converter.schemas.enable": "false",
			"transforms":"extractFields",
            "transforms.extractFields.type":"bbejeck.chapter_5.transformer.MultiFieldExtract$Value",
            "transforms.extractFields.extract.fields":"bid,ask,displayName,symbol",
			"schema.ignore": "true",
			"key.ignore": "true"
	    }'


curl -i -X PUT localhost:8083/connectors/stock-feed-connector/config \
    -H "Content-Type: application/json" \
	-d '{
	        "connector.class": "bbejeck.chapter_5.connector.StockTickerSourceConnector",
			"api.url": "https://query1.finance.yahoo.com/v7/finance/quote",
			"tasks.max": "1",
			"topic": "yahoo_feed_results",
            "batch.size": "100",
            "api.poll.interval": "5000",
            "token": "token-placeholder",
            "result.node.path": "/quoteResponse/result",
			"value.converter": "org.apache.kafka.connect.json.JsonConverter",
			"value.converter.schemas.enable": "false",
			"transforms":"extractFields",
            "transforms.extractFields.type":"bbejeck.chapter_5.transformer.MultiFieldExtract$Value",
            "transforms.extractFields.extract.fields":"bid,ask,displayName,symbol",
			"schema.ignore": "true",
			"key.ignore": "true"
	    }'


Update the ticker-symbols with these entries ,BRDCY,MSFT

curl -X DELETE http://localhost:8083/connectors/student-info-elasticsearch-connector

ELASTIC SEARCH COMMANDS
curl -X GET 'http://localhost:9200/_cat/indices?v' -u elastic:elastic
curl -X GET 'http://localhost:9200/postgres_orientation_students/_search'  -u elastic:elastic
curl -XGET localhost:9200/


List all connectors
curl -s -XGET http://localhost:8083/connector-plugins | jq '.[].class'
Expected results
"bbejeck.chapter_5.connector.StockTickerSourceConnector"
"io.confluent.connect.elasticsearch.ElasticsearchSinkConnector"
"io.confluent.connect.jdbc.JdbcSinkConnector"
"io.confluent.connect.jdbc.JdbcSourceConnector"
"org.apache.kafka.connect.mirror.MirrorCheckpointConnector"
"org.apache.kafka.connect.mirror.MirrorHeartbeatConnector"
"org.apache.kafka.connect.mirror.MirrorSourceConnector"
